Welcome to dipole’s documentation!
**********************************

dipole.dipole_tilt(times, epoch=2015.0)

   Calculate dipole tilt angle for given set of times, at given
   epoch(s)

   Parameters:
      * **times** (*datetime** or **array/list of datetimes*) –
        Times for which the dipole tilt angle should be calculated

      * **epoch** (*float** or **array/list of floats**,
        **optional*) – Year (with fraction) for calculation of dipole
        axis. This should either be a scalar, or contain as man
        elements as times. Default epoch is 2015.0

   Returns:
      **tilt_angle** – Array of dipole tilt angles in degrees

   Return type:
      array

   -[ Example ]-

   >>> from datetime import datetime

   >>> print dipole_tilt(datetime(1927, 6, 10, 12, 00), epoch = 1927)
   [ 26.79107107]

   >>> # several times can be given. If they are close in time, one epoch should be fine
   >>> print dipole_tilt([datetime(1927, 6, 10, 12, 00), datetime(1927, 6, 10, 10, 00)], epoch = 1927)
   [ 26.79107107  20.89550663]

   >>> # if the times are far apart, the epoch for each can be specified to take field changes into account
   >>> # this will be a bit slower if many times are given
   >>> print dipole_tilt([datetime(1927, 6, 10, 12, 00), datetime(2015, 6, 10, 10, 00)], epoch = (1927, 2015))
   [ 26.79107107  20.59137527]

dipole.dipole_axis(epoch)

   calculate dipole axis in geocentric ECEF coordinates for given
   epoch(s)

   Calculations are based on IGRF coefficients, and linear
   interpolation is used in between IGRF models (defined every 5
   years). Secular variation coefficients are used for the five years
   after the latest model.

   Parameters:
      **epoch** (*float** or **array of floats*) – year (with
      fraction) for which the dipole axis will be calculated. Multiple
      epochs can be given, as an array of N floats, resulting in a N x
      3-dimensional return value

   Returns:
      **axes** – N x 3-dimensional array, where N is the number of
      inputs (epochs), and the columns contain the x, y, and z
      components of the corresponding dipole axes

   Return type:
      array

dipole.dipole_poles(epoch)

   calculate dipole pole positions at given epoch(s)

   Parameters:
      **epoch** (*float** or **array of floats*) – year (with
      fraction) for which the dipole axis will be calculated. Multiple
      epochs can be given, as an array of N floats, resulting in a N x
      3-dimensional return value

   Returns:
      * **north_colat** (*array*) – colatitude of the dipole pole in
        the northern hemisphere, same number of values as input

      * **north_longitude** (*array*) – longitude of the dipole pole
        in the northern hemisphere, same number of values as input

      * **south_colat** (*array*) – colatitude of the dipole pole in
        the southern hemisphere, same number of values as input

      * **south_longitude** (*array*) – longitude of the dipole pole
        in the southern hemisphere, same number of values as input


Indices and tables
******************

* Index

* Module Index

* Search Page
